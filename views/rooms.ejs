<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=0.52, maximum-scale=0.52, user-scalable=no">
        <title>TigerAmbush</title>
        <link rel="stylesheet"
        href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
        integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk"
        crossorigin="anonymous">
        <link
        href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap"
        rel="stylesheet">
        <link rel="stylesheet"
        href="https://use.fontawesome.com/releases/v5.13.1/css/all.css"
        integrity="sha384-xxzQGERXS00kBmZW/6qxqJPyxW3UR0BPsL4c8ILaIWXva5kFi7TxkIIaMiKtqV1Q"
        crossorigin="anonymous">
        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
        <link rel="icon" type="image/png" href="pawlogo.png" />
        <link rel="stylesheet" href="styles.css">

        <!-- Including socket.io -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.4/socket.io.js"></script>
        <script src="/socket.io/socket.io.js"></script>

        <!-- Including Google OAught API -->
        <script src="https://apis.google.com/js/api:client.js"></script>
        <meta name="google-signin-scope" content="profile email">
        <meta name="google-signin-client_id" content="758290075776-i5a0a6680n51lo76p8qfignd0s5148jd.apps.googleusercontent.com">
        <script src="https://apis.google.com/js/platform.js" async defer></script>

        <!-- Google OAught API Script-->
        <script>
            var googleUser = {};
            var startApp = function() {
                gapi.load('auth2', function(){
                    // Retrieve the singleton for the GoogleAuth library and set up the client.
                    auth2 = gapi.auth2.init({
                    client_id: '758290075776-i5a0a6680n51lo76p8qfignd0s5148jd.apps.googleusercontent.com',
                    cookiepolicy: 'single_host_origin',
                    // Request scopes in addition to 'profile' and 'email'
                    //scope: 'additional_scope'
                    });
                    attachSignin(document.getElementById('customBtn'));
                    attachSignin(document.getElementById('sign-in'));
                });
            };
        
            function attachSignin(element) {
                console.log(element.id);
                auth2.attachClickHandler(element, {},
                    function (googleUser) {
                        onSignIn(googleUser);
                        //TODO: ADD WHAT HAPPENS ON SIGNIN
                    }, function(error) {
                        alert("Please try again. The following error occured: " + JSON.stringify(error, undefined, 2));
                });
            }
        </script>
    </head>
    <body>
        <p id="appLink" style="display: none;"><%= appLink %></p>
        <nav class="navbar navbar-expand-lg navbar-dark bg-transparent">
            <!-- <div class="block"> -->
            <a class="navbar-brand" href="/">
                <img id="logo" src="pawlogo.png" height="80px" width="80px" alt="logo">
                <h1 class="header-shadow" id="brand-text" style="font-size:calc(30px + 1.5vw);">Tiger<span id="ambush">Ambush</span></h1>
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse links" id="navbarSupportedContent">
                <ul class="header-shadow navbar-nav mr-auto">
                    <a href="#" onclick="showTerms()"><li class="nav-item">Terms of Use</li></a>
                    <a href="#" onclick="showTeam()"><li class="nav-item">Our Team</li></a>
                    <a href="#" style="display:none;" id="roomsRef" onclick="showRooms()"><li class="nav-item">Rooms</li></a>
                    <a href="#" id="sign-inRef"><li class="nav-item" id="sign-in">Chat Now</li></a>   
                    <a href="#" style="display:none;" id="sign-out" onclick="signOut()"><li class="nav-item">Sign Out</li></a>
                </ul>
            </div>
        </nav>
        <!--------------------------- Landing page --------------------------->
        <div id="landingCon" class="container-fluid">
            <div class="headline header-shadow">
                <h1 class="big-text typing"> 
                    <div></div>
                </h1>
                <br>
                <p class="sub-text">Tiger Ambush is an app built to foster greater social 
                    interaction among students of the Princeton body.
                    <span> Join our virtual chat rooms: study groups,
                    group bonding, watch parties and more.</span>
                </p>
                <div id="customBtn" class="customGPlusSignIn">
                    <img src="google-icon.svg" height=20 style="position: absolute; top: 22%; left: 30%; transform: translate(-50%,-50%);"/>
                    <span class="buttonText" style="position: absolute; top: 50%; left: 60%; transform: translate(-50%,-50%);">Sign In</span>
                </div>
                <div id="iphone" class="d-none d-md-block">
                    <img src="iphone.png" alt="iPhone">
                </div>
            </div>
        </div>
        <!--------------------------- Rooms page --------------------------->
        <div class="roomsPageCon" id="topMenuBar" style="display: none;">
            <br />
            <div class="header3 justify-content-around" style="display: flex; flex-direction: row;">
                <br />
                <div style="text-align: left; align-self: left; width: 50%">
                    <label class="pClass" id="roomHeader" style="display: none; font-weight: bold;" onclick="clearSearch()">Showing all rooms</label><br />
                </div>
                <div style="text-align: right; align-self: right; width: 50%">
                    <label class="pClass"  id="emailHeader" style="display: none; font-weight: bold;"></label>
                </div>
            </div>
            <br />
            <div class="header3 justify-content-around" style="display: flex; flex-direction: row;">
                <br />
                <div style="text-align: left; width: 50%;">
                    <input id="searchbox" class="inputClass" placeholder="Search rooms..." style="display: none; width: 48%; min-width: 150px;"/>
                    <button id="searchBtn" class="buttonClass roomsButtonClass" type="button" onclick="search()" style="display: none;">Search</button>                </div>
                <div style="text-align: right; width: 50%;">
                    <button id="joinRandomBtn" class="buttonClass roomsButtonClass" type="button" onclick="joinRandom()" style="display: none;">Join Random</button>
                    <button id="newRoomBtn" class="buttonClass roomsButtonClass" type="button" onclick="showNewRoomForm()" style="display: none;">New Room</button>
                </div>
                <br />
            </div>
        </div>
        <div class="roomsPageCon newRoomsCon" id="newRoomFormCon" style="display: none;">
            <br />
            <br />
            <div class="header4 justify-content-around">
                <input id="roomNameField" class="roomEditableClass roomInputClass" placeholder="Room Name"/>
                <input id="passwordField" class="roomEditableClass roomInputClass" placeholder="Password (optional)"/>
            </div>
            <div class="header5 justify-content-around">
                <br />
                <textarea id="descriptionField" class="roomEditableClass textareaClass" rows="4" placeholder="Describe your rooms purpose, class, or activity..."></textarea>
                <br />
                <br />
                <br />
                <input id ="openrandom" type="checkbox" onclick="onCheck()">
                <label class="pClass">Open Random Joining</label>
                <button id="buttonCreate" class="buttonClass" type="button" onclick="createRoom()">Create Room</button>
                <button id="buttonCloseForm" class="buttonClass" type="button" onclick="hideNewRoomForm()">Close Form</button>
                <br />
                <br />
            </div>
        </div>
        <div class="roomsPageCon" id="chatHeader" style="display: none;">
            <div style="width: 105%;">
                <br />
                <p class="pClass" id="loadingRooms" style="display: none;">Loading rooms...</p>
                <p class="pClass" id="noRooms" style="display: none;">No rooms to show...</p>
                <p class="pClass" id="deadServer" style="display: none;">Server maintenance ongoing. Please try again in 5 minutes.</p>
                <div class="roomsCon">
                    <div onmouseover="showDetails(this)" onmouseout="hideDetails(this)" class="room" style="display: none;">
                        <br />
                        <img src="pawlogo.png" alt="logo" height="80px" width="80px" style="float: left;">
                        <div class="dataCon">
                            <a class="roomName" style="font-size:calc(30px + 1.5vw); margin-left: 1em; color: rgb(235, 235, 235); text-shadow: 5px 5px 7px rgb(65, 65, 65);"  href="#">Room Name</a>
                            <br />
                            <label class="numUsers pClass" style="font-size: 20px; display: none; padding-left: 50px;">Number of Active Users: </label>
                            <br />
                            <p class="roomDetails pClass" style="display: none; padding-left: 130px;"></p>
                            <br />
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <br />
        </div>
        <!--------------------------- Terms of Use page --------------------------->
        <div id="termsCon" class="container-fluid roomsPageCon" style="display: none;">
            <br />
            <h1 class="big-text teaminfoClass my-4" style="font-size: 3rem;"> 
                Terms of Use
            </h1>
            <br>
            <p class="sub-text terminfoClass">
                By using TigerAmbush, you hereby accept the conditions detailed on this page.
                <br /><br />
                Any information sent through the site is considered public information. 
                The development team is not responsible for any information that is revealed in the app.
                Although the server does not save information once the rooms are destroyed, 
                the app does not have the ability to prevent users from taking screenshots or copying text.
                <br /><br />
                Any behavior that does not align with Princeton's code of conduct is not accepted in the app.
                A report button will alert the development team of your chat and they will contact with you and faculty as soon as possible.
                We are currently implementing a way to send chat history directly to users.
            </p>
        </div>
        <!--------------------------- Our Team page --------------------------->
        <div id="teamCon" class="container-fluid roomsPageCon" style="display: none;">
            <br />
            <h1 class="header-shadow big-text teaminfoClass my-4" style="font-size: 3rem;"> 
                Development Team
            </h1>
            <br>
            <div class="container">
                <div class="row">
                    <div class="col-12 col-lg-4" style="text-align: center;">
                        <img src="brendan.png" alt="Brendan" height="250px" width="250px" class="img-fluid">
                        <p class="sub-text teaminfoClass">
                            Brendan Wang '23 (byw2@princeton.edu)
                        </p>
                    </div>
                    <div class="col-12 col-lg-4" style="text-align: center;">
                        <img src="phoebe2.png" alt="Phoebe" height="250px" width="250px" class="img-fluid">
                        <p class="sub-text teaminfoClass">
                            Phoebe Lin '23 (pslin@princeton.edu)
                        </p>
                    </p>
                    </div>
                    <div class="col-12 col-lg-4" style="text-align: center;">
                        <img src="zach.png" alt="Zach" height="250px" width="250px" class="img-fluid">
                        <p class="sub-text teaminfoClass">
                            Zachary Lopez '23 (zlopez@princeton.edu)
                        </p>
                    </div>
                </div>
            </div>
        </div>

        <!--------------------------- Scripts --------------------------->
        <script src="typing.js"></script>

        <!-- initializing -->
        <script>
            var appLink = document.getElementById("appLink").innerHTML;
            var socket = io.connect(appLink);
            var rooms;
            var roomIDs;
            var roomRandomLinks;
            var id;
            var fullName;
            var givenName;
            var email;
            var nickname;
            var criteria = "";

            startApp();
        </script>
        <!-- running socket.io js -->
        <script>
            socket.on('connect', function(data) {
                socket.emit('console', 'New user loaded rooms page.');
            });

            socket.on('refreshRooms', function(data) {
                if(criteria == "") {
                    refreshRooms(data);
                }
                else {
                    socket.emit('search', {"criteria": document.getElementById("searchbox").value, "userID": id});
                }
            });
        </script>
        <!-- navbar/tab switch functions -->
        <script>
            function showTerms() {
                $("#newRoomFormCon").hide();
                $("#topMenuBar").hide();
                $("#chatHeader").hide();
                $("#landingCon").hide();
                $("#termsCon").show();
                $("#teamCon").hide();
            }

            function showTeam() {
                $("#newRoomFormCon").hide();
                $("#topMenuBar").hide();
                $("#chatHeader").hide();
                $("#landingCon").hide();
                $("#termsCon").hide();
                $("#teamCon").show();
            }

            function showRooms() {
                $("#topMenuBar").show();
                $("#chatHeader").show();
                $("#landingCon").hide();
                $("#termsCon").hide();
                $("#teamCon").hide();
                socket.emit('getRooms', id);
            }
        </script>
        <!-- running Google OAuth js -->
        <script>
            function onSignIn(googleUser) {
                // Useful data for your client-side scripts:
                var profile = googleUser.getBasicProfile();

                if(!profile.getEmail().includes("@princeton.edu")) {
                    alert("TigerAmbush is only available to the Princeton emails.");
                    signOut();
                    return;
                }

                // The ID token you need to pass to your backend:
                id = googleUser.getAuthResponse().id_token;
                fullName = profile.getName();
                givenName = profile.getGivenName();
                email = profile.getEmail();

                localStorage.setItem("id", id);
                localStorage.setItem("fullName", fullName);
                localStorage.setItem("givenName", givenName);
                localStorage.setItem("email", email);

                afterSignIn();
            }

            function signOut() {
                var auth2 = gapi.auth2.getAuthInstance();
                auth2.signOut().then(function () {
                    localStorage.removeItem("id");
                    localStorage.removeItem("fullName");
                    localStorage.removeItem("givenName");
                    localStorage.removeItem("email");
                    location.reload();
                });
            }

            function afterSignIn() {
                showRooms();
                $("#emailHeader").show();
                $("#roomHeader").show();
                $("#newRoomBtn").show();
                $("#loadingRooms").show();
                $("#searchbox").show();
                $("#searchBtn").show();
                $("#roomsRef").show();
                $("#sign-out").show();
                $("#sign-inRef").hide();

                document.getElementById("emailHeader").innerHTML = "Signed in as " + email;

                socket.emit('getRooms', id);
                socket.on(id, function(data) {
                    refreshRooms(data);
                });
            }

            if (localStorage.getItem("fullName") != null) {
                id = localStorage.getItem("id");
                fullName = localStorage.getItem("fullName");
                givenName = localStorage.getItem("givenName");
                email = localStorage.getItem("email");
                afterSignIn();
            }
        </script>
        <!-- rooms general functions -->
        <script>
            function refreshRooms(res) {
                var roomsCon = $(".roomsCon").eq(0);
                var roomEntries = roomsCon.children();
                for(i = 1; i < roomEntries.length; i++) {
                    roomEntries.eq(i).remove();
                }
                if(res['serverStatus'] != 'alive') {
                    $("#deadServer").show();
                    $("#emailHeader").hide();
                    $("#roomHeader").hide();
                    $("#newRoomBtn").hide();
                    $("#loadingRooms").hide();
                    $("#searchbox").hide();
                    $("#searchBtn").hide();
                    $("#newRoomBtn").hide();
                    $("#joinRandomBtn").hide();
                    return;
                }
                $("#newRoomBtn").show();
                $("#joinRandomBtn").show();
                $("#loadingRooms").hide();
                rooms = res;
                roomRandomLinks = new Array();
                roomIDs = Object.keys(res);
                var i;
                for(i = 0; i < roomIDs.length-1; i++) {
                    var newRoom = $(".room").eq(0).clone().show();
                    $(".roomsCon").append(newRoom);
                    var name;
                    if(nickname == undefined) {
                        name = fullName;
                    }
                    else {
                        name = nickname;
                    }
                    if(res[roomIDs[i]]['openRandomJoin']) {
                        roomRandomLinks.push(res[roomIDs[i]]['link']);
                    }
                    dataCon = newRoom.children(".dataCon").eq(0);
                    dataCon.children(".roomName").eq(0).attr("href", res[roomIDs[i]]['link']);
                    dataCon.children(".roomName").eq(0).text(res[roomIDs[i]]['roomName']);
                    dataCon.children(".numUsers").eq(0).text("Number of Active Users: "+Object.keys(res[roomIDs[i]]['participants']).length);
                    document.getElementsByClassName("roomDetails")[i+1].insertAdjacentHTML('beforeend',res[roomIDs[i]]['description'].replace(/\n/g, "<br />"));
                }
                if(roomIDs.length == 0) {
                    $("#noRooms").show();
                }
                else {
                    $("#noRooms").hide();
                }
            }

            function showDetails(container) {
                $(container).children(".dataCon").eq(0).children(".numUsers").eq(0).show();
                $(container).children(".dataCon").eq(0).children(".roomDetails").eq(0).show();
            }

            function hideDetails(container) {
                $(container).children(".dataCon").eq(0).children(".numUsers").eq(0).hide();
                $(container).children(".dataCon").eq(0).children(".roomDetails").eq(0).hide();
            }

            function showNewRoomForm() {
                $("#newRoomFormCon").show();
                window.scrollTo(0, 500);
            }

            function hideNewRoomForm() {
                $("#newRoomFormCon").hide();
                $("#newRoomBtn").show();
            }

            function joinRandom() {
                window.location.href = roomRandomLinks[Math.floor(Math.random() * roomRandomLinks.length)];
            }

            function onCheck() {
                if($('#openrandom').is(":checked")) {
                    if(document.getElementById("passwordField").value != "") {
                        alert("Cannot open room to random join when the room requires a password.");
                        document.getElementById("openrandom").checked = false;
                    }
                    else {
                        document.getElementById("passwordField").readOnly = true;
                        $("#passwordField").hide();
                    }
                }
                else {
                    document.getElementById("passwordField").readOnly = false;
                    $("#passwordField").show();
                }
            }

            function createRoom() {
                // Validating data from newRoomFormCon
                if(document.getElementById("roomNameField").value == "") {
                    alert("Room Name required.");
                    return;
                }
                var i;
                for(i = 0; i < roomIDs.length; i++) {
                    if(rooms[roomIDs[i]]['roomName'] == document.getElementById("roomNameField").value) {
                        alert("Room Name already taken.");
                        return;
                    }
                }
                if($("#descriptionField").val().length < 20) {
                    alert("Description needs to be at least 20 characters.");
                    return;
                }
                var data = {
                    'roomName': document.getElementById("roomNameField").value,
                    'password': document.getElementById("passwordField").value,
                    'description': $("#descriptionField").val(),
                    'count' : 0,
                    'openRandomJoin': $('#openrandom').is(":checked")
                };
                $("#newRoomFormCon").hide();
                document.getElementById("roomNameField").value = "";
                document.getElementById("passwordField").value = "";
                $("#descriptionField").val("");
                document.getElementById("openrandom").checked = false;
                //Sending create room request
                socket.emit('createRoom', data);
            }

            function search() {
                criteria = document.getElementById("searchbox").value;
                if(document.getElementById("searchbox").value == "") {
                    clearSearch();
                    return;
                }
                $("#roomHeader").text('x Showing "' + criteria + '" in rooms"');
                socket.emit('search', {"criteria": document.getElementById("searchbox").value, "userID": id});
                socket.on('search'+id, function(data) {
                    refreshRooms(data);
                });
            }

            function clearSearch() {
                $("#roomHeader").text('Showing all rooms');
                criteria = "";
                document.getElementById("searchbox").value = "";
                socket.emit('getRooms', id);
            }
        </script>
    </body>
</html>