<!DOCTYPE html>
<html>
    <header>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.4/socket.io.js"></script>
        <script src="/socket.io/socket.io.js"></script>
        <title><%= roomName %></title>
        
        <link rel="stylesheet" href="styles.css">
        <link rel="icon" type="image/png" href="pawlogo.png" />
    </header>
    <body style="text-align:center; ">
        <div style="margin:auto;">
            <div style="height: 140px;">
                <table style="margin:auto;">
                    <tr>
                        <td><img src="pawlogo.png" alt="logo" height="50px" width="50px"></td>
                        <td></td>
                        <td><strong><h1 style="font-size: 2.55vw; color: white; text-shadow: 0 4px 6px rgba(143, 142, 142, 0.8);"><%= roomName %></h1></strong></td>
                    </tr>
                </table>
                <hr class="chat-hr"/>
            </div>
            <br />
            <p class="pClass" id="announcement"><%= announcement %></p>
            <p id="invalid" style="display: none;">Invalid URL. Please rejoin room from rooms page. Redirecting in 5 seconds.</p>
            <div class="pClass" id="onLoginCon" style="display: none;">
                <p class="pClass" id="destroyed" style="display: none;">This room has been removed. Redirecting to rooms page in 5 seconds.</p>
                <div id="messageContainer" class="messageCon" style="overflow:scroll; height: 300px; width: 50%; min-width: 600px; margin: 0 auto;">
                    <div class="message" style="display: none;" onclick="showDetails(this)">
                        <p class="messageText" style="height: 10px; color: white; font-size: 16px; font-weight:bold; text-align:left; text-shadow: 1px 2px 2px #8a719a;"></p>
                        <p class="messageSender" style="height: 10px; display: none; color: white; font-size: 12px; text-align:left;"></p>
                    </div>
                </div>
                <br />
                <hr class="chat-hr" id="lowerHr"/>
                <br />
                <input class="inputClass" id="messagebox" onfocusout="notTyping()" onfocusin="typing()" style="width: 37.5%; min-width: 447px;" placeholder="Type your message..."/>
                <button class="buttonClass" id="sendBtn" type="button" onclick="send()">Send</button>
                <br />
                <br />
                <p id="participantsList" class="pClass"></p>
                <input class="inputClass" type="password" id="passwordbox" placeholder="Enter room password"/>
                <button class="buttonClass" id="validateBtn" type="button" onclick="validate()">Validate</button>
                <button class="buttonClass" id="renameBtn" type="button" onclick="showRenameCon()">Edit Username</button>
                <button class="buttonClass" id="reportBtn" type="button" onclick="report()">Report</button>
                <br /><button class="wideButtonClass" type="button" onclick="goback()">Go Back</button>
                <div id="renameCon" style="display: none; margin: 0px 0px 500px 0px;">
                    <br />
                    <br />
                    <input  class="inputClass" id="nickname" style="margin: 0px 0px 5px 0px; width: 24.6%; min-width: 296px;" placeholder="Enter Nickname"/>
                    <br />
                    <button class="buttonClass" id="saveBtn" type="button" onclick="save()">Save</button>
                    <button class="buttonClass" id="cancelBtn" type="button" onclick="hideRenameCon()">Cancel</button>
                </div>
            </div>
        </div>
        <script type="text/javascript" src="https://code.jquery.com/jquery-latest.min.js"></script>
        <script type="text/javascript">
            const roomID = <%- JSON.stringify(roomID) %>;
            const auth0User = <%- JSON.stringify(userData) %>;
            const userID = auth0User['id'];
            const fullName = auth0User['displayName'];
            const email = auth0User['emails'][0]['value'];
            const appLink = <%- JSON.stringify(appLink) %>;
            const hasPassword = <%- JSON.stringify(hasPassword) %>;
            const alive = <%- JSON.stringify(alive) %>;
            const socket = io.connect(appLink);
            var validateListenerExists = false;
            var alreadyReviewed = false;

            if(document.getElementById("announcement").innerHTML == "") {
                $("#announcement").hide();
            }

            socket.on('connect', function(data) {
                if(auth0User) {
                    onSignIn();
                }
            });

            socket.on('destroy'+roomID, function(data) {
                onlyShowDestroyDialogue();
            });

            socket.on('announcement', function(newAnnouncement) {
                if(newAnnouncement == "") {
                    $("#announcement").hide();
                }
                else {
                    $("#announcement").show();
                }
                document.getElementById("announcement").innerHTML = newAnnouncement;
            });

            function onlyShowDestroyDialogue() {
                //$("#chatbox").hide();
                $("#messageContainer").hide();
                $("#messagebox").hide();
                $("#sendBtn").hide();
                $("#passwordbox").hide();
                $("#validateBtn").hide();
                $("#renameBtn").hide();
                $("#reportBtn").hide();
                $("#participantsList").hide();
                $("#destroyed").show();
                setInterval(goback, 5000);
            }

            function join() {
                //$("#chatbox").show();
                $("#messageContainer").show();
                $("#messagebox").show();
                $("#sendBtn").show();
                $("#renameBtn").show();
                $("#reportBtn").show();
                $("#passwordbox").hide();
                $("#validateBtn").hide();
                socket.emit('join', {"fullName": fullName, "roomID": roomID, 'userID': userID, 'email': email});
                socket.on('disperse'+roomID, function(data) {
                    /* Audio link for notification */ 
                    if (document.visibilityState != "visible" && alreadyReviewed && data['userID'] != userID) {
                        var audio = new Audio("notif.mp3"); 
                        audio.volume = 0.3;
                        audio.play();
                    }
                    var newMessage = $(".message").eq(0).clone().show();
                    $(".messageCon").append(newMessage);
                    newMessage.children(".messageText").eq(0).text(data["message"]);
                    newMessage.children(".messageSender").eq(0).text("Sent by " + data["email"]);
                    if(data["userID"] == userID) {
                        newMessage.children(".messageText").eq(0).css('text-shadow','1px 2px 3px #925c29');
                    }
                    var messageContainer = document.getElementById("messageContainer");
                    messageContainer.scrollTop = messageContainer.scrollHeight;
                });
                socket.on('enter'+roomID, function(data) {
                    var userIDs = Object.keys(data);
                    var userNames = "Active Users: <br />";
                    var i;
                    for(i = 0; i < userIDs.length; i++) {
                        userNames = userNames + data[userIDs[i]] + "<br />"
                    }
                    document.getElementById("participantsList").innerHTML = userNames;
                });
            }

            function send() {
                if(document.getElementById("messagebox").value != "") {
                    socket.emit('send', {"message": document.getElementById("messagebox").value, "roomID": roomID, "email": email, "userID": userID});
                    document.getElementById("messagebox").value = "";
                }
                document.getElementById("messagebox").focus();
                document.getElementById("sendBtn").blur();
            }

            function showDetails(container) {
                if($(container).children(".messageSender").eq(0).is(':hidden')) {
                    $(container).children(".messageSender").eq(0).show();
                }
                else {
                    $(container).children(".messageSender").eq(0).hide();
                }
            }

            function validate() {
                socket.emit('validate',{'roomID':roomID,'password':document.getElementById("passwordbox").value, 'userID':userID});
                if(!validateListenerExists) {
                    socket.on('connect'+userID, function(status) {
                        if(status != 'success') {
                            alert(status);
                            document.getElementById("passwordbox").value = "";
                        }
                        else {
                            join();
                        }
                    });
                    validateListenerExists = true;
                }
            }

            function save() {
                socket.emit('rename', {"nickname": document.getElementById("nickname").value, "roomID": roomID, 'userID': userID, 'email': email});
                $("#renameCon").hide();
            }

            function typing() {
                const messageContainer = document.getElementById('messageContainer');
                messageContainer.scrollIntoView({
                    behavior: "smooth",
                    block: "start",
                    inline: "center"
                });
                window.scrollBy(0, -400); // Scroll 100px to the right
                const messagebox = document.getElementById('messagebox');
                messagebox.scrollIntoView(false);
                socket.emit('statusUpdate', {"status": " is typing...", "roomID": roomID, 'userID': userID, 'email': email});
            }

            function notTyping() {
                socket.emit('statusUpdate', {"status": '', "roomID": roomID, 'userID': userID, 'email': email});
            }

            function showRenameCon() {
                document.getElementById("nickname").value = fullName;
                document.getElementById("renameBtn").blur();
                $("#renameCon").show();
                window.scrollBy(0, 300);
                document.getElementById("nickname").focus();
            }

            function hideRenameCon() {
                $("#renameCon").hide();
            }

            function goback() {
                window.location.href=appLink;
            }

            function report() {
                socket.emit('report',{'roomID':roomID,'email': email});
            }

            function onSignIn() {
                $("#onLoginCon").show();

                if(!alive) {
                    onlyShowDestroyDialogue();
                }
                else if(!hasPassword) {
                    join();
                    document.getElementById("messagebox").focus();
                }
                else {
                    //$("#chatbox").hide();
                    $("#messageContainer").hide();
                    $("#lowerHr").hide();
                    $("#messagebox").hide();
                    $("#sendBtn").hide();
                    $("#renameBtn").hide();
                    $("#reportBtn").hide();
                    document.getElementById("passwordbox").focus();
                }
            }

            document.addEventListener('visibilitychange', function() {
                if(document.visibilityState == "visible") {
                    document.getElementById("messagebox").blur();
                    socket.emit('statusUpdate', {"status": '', "roomID": roomID, 'userID': userID, 'email': email});
                    alreadyReviewed = true;
                }
                else {
                    socket.emit('statusUpdate', {"status": " is idle.", "roomID": roomID, 'userID': userID, 'email': email});
                }
                console.log(document.visibilityState);
            });

            var isOnIOS = navigator.userAgent.match(/iPad/i)|| navigator.userAgent.match(/iPhone/i);
            var eventName = isOnIOS ? "pagehide" : "beforeunload";

            window.addEventListener(eventName, function (e) {
                if($("#messageContainer").is(':visible')) {
                    socket.emit('leave', {'roomID':roomID, 'userID': userID});
                }
            });

            $(window).keydown(function(e) {
                switch (e.keyCode) {
                    case 13:
                        if($("#messageContainer").is(':hidden')) {
                            validate();
                        }
                        else {
                            if($("#messagebox").is(':focus')) {
                                send();
                            }
                            else {
                                save();
                            }
                            
                        }
                        return;
                }
            });
        </script>
    </body>
</html>